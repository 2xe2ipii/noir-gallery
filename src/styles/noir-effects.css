/* Old TV Effects */
.tv-frame {
  position: relative;
  background: linear-gradient(145deg, #1a1a1a 0%, #0a0a0a 100%);
  box-shadow: 
    inset 0 0 50px rgba(0, 0, 0, 0.5),
    0 0 30px rgba(212, 175, 55, 0.2);
}

.tv-screen {
  position: relative;
  background: linear-gradient(180deg, #000000 0%, #0a0a0a 100%);
  border-radius: 30px;
  overflow: hidden;
}

.tv-screen::before {
  content: '';
  position: absolute;
  inset: 0;
  background: radial-gradient(
    circle at center,
    transparent 0%,
    rgba(0, 0, 0, 0.8) 100%
  );
  pointer-events: none;
  z-index: 2;
}

.tv-screen::after {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(
    180deg,
    rgba(255, 255, 255, 0.1) 0%,
    transparent 5%,
    transparent 95%,
    rgba(255, 255, 255, 0.1) 100%
  );
  pointer-events: none;
  z-index: 3;
}

.tv-glow {
  position: absolute;
  inset: -20px;
  background: radial-gradient(
    circle at center,
    rgba(212, 175, 55, 0.2) 0%,
    transparent 70%
  );
  pointer-events: none;
  opacity: 0;
  transition: opacity 0.5s ease;
}

.tv-on .tv-glow {
  opacity: 1;
}

.tv-static-noise {
  position: absolute;
  inset: 0;
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.05'/%3E%3C/svg%3E");
  mix-blend-mode: overlay;
  pointer-events: none;
  z-index: 4;
  animation: noise 0.2s steps(2) infinite;
}

@keyframes noise {
  0% { transform: translate(0, 0); }
  10% { transform: translate(-5%, -5%); }
  20% { transform: translate(10%, 5%); }
  30% { transform: translate(-5%, 10%); }
  40% { transform: translate(15%, -5%); }
  50% { transform: translate(-10%, 5%); }
  60% { transform: translate(5%, 5%); }
  70% { transform: translate(0, 10%); }
  80% { transform: translate(-5%, 0); }
  90% { transform: translate(5%, -5%); }
  100% { transform: translate(0, 0); }
}

/* Noir Button Styles */
.btn-noir-classic {
  background: linear-gradient(145deg, #2a2a2a 0%, #1a1a1a 100%);
  border: 3px solid rgba(212, 175, 55, 0.6);
  box-shadow: 
    0 0 20px rgba(0, 0, 0, 0.3),
    inset 0 0 10px rgba(212, 175, 55, 0.2);
  transition: all 0.3s ease;
}

.btn-noir-classic:hover {
  border-color: rgba(212, 175, 55, 0.8);
  box-shadow: 
    0 0 30px rgba(212, 175, 55, 0.3),
    inset 0 0 15px rgba(212, 175, 55, 0.3);
  transform: translateY(-2px);
}

.btn-noir-classic:active {
  transform: translateY(1px);
  box-shadow: 
    0 0 15px rgba(212, 175, 55, 0.2),
    inset 0 0 5px rgba(212, 175, 55, 0.1);
}

/* Channel Display */
.channel-text {
  text-shadow: 
    0 0 10px rgba(212, 175, 55, 0.5),
    0 0 20px rgba(212, 175, 55, 0.3);
  letter-spacing: 2px;
}

/* Ambient Light Effect */
.ambient-light {
  position: absolute;
  inset: 0;
  background: radial-gradient(
    circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
    rgba(212, 175, 55, 0.1) 0%,
    transparent 60%
  );
  pointer-events: none;
  z-index: 1;
  transition: opacity 0.3s ease;
}
